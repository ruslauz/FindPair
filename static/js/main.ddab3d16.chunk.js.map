{"version":3,"sources":["components/NameInput/NameInput.module.scss","components/LevelInput/LevelInput.module.scss","components/App/App.module.scss","redux/reducers/appReducer.js","redux/reducers/nameInputReducer.js","redux/reducers/levelSelectionReducer.js","utils/settings.js","redux/reducers/gameReducer.js","redux/reducers/finishReducer.js","store/store.js","redux/actions/appActions.js","components/Input/Input.js","components/NameInput/NameInput.js","redux/actions/nameInputActions.js","redux/actions/gameActions.js","redux/actions/finishActions.js","utils/sharedMethods.js","redux/actions/levelSelectionActions.js","utils/localStorage.js","components/LevelInput/LevelInput.js","components/Card/Card.js","components/Game/Game.js","components/Finish/Finish.js","components/App/App.js","index.js","components/Finish/Finish.module.scss","components/Game/Game.module.scss","components/Card/Card.module.scss"],"names":["module","exports","initialState","appState","fadeOutTimout","highScores","score","appReducer","state","action","type","payload","placeholder","playerName","vanished","nameInputReducer","gameLevel","levelSelectionReducer","settings","junior","numberOfCards","rows","columns","middle","senior","makeRandomArrayOfCards","carsdsAmount","result","arrayOfPairedNumbers","Array","keys","map","i","index","Math","floor","random","cards","openedCardsIndexes","openedCardsNumber","steps","firstCardValue","secondCardValue","leftCards","clickBlock","timer","gameReducer","card","idx","id","value","isOpened","finishReducer","rootReducer","combineReducers","app","nameInput","levelSelection","game","finish","store","createStore","undefined","window","__REDUX_DEVTOOLS_EXTENSION__","changeAppState","newState","setHighScores","Input","props","name","onChange","ref","inputRef","onFocus","onBlur","autoComplete","LabelText","NameInput","dispatch","useDispatch","useSelector","isButtonDisabled","length","cls","classes","push","vanish","className","join","e","preventDefault","setPlayerName","target","trim","onClick","setTimeout","disabled","setGame","setFirstCard","setSecondCard","setGameVanished","setClickBlock","setTimer","setFinishVanished","onChangeLevel","setVanishedAction","onEndGame","setHighScoresState","level","JSON","parse","localStorage","getItem","LevelInput","levels","Object","Card","active","container","openCard","saveOpenedCardIndex","front","back","Game","style","gridTemplateColumns","gridTemplateRows","finishGame","setItem","stringify","setHighscoresToLocalStorage","useEffect","equal","setCards","header","player","buttons","Finish","highScoresTable","entries","sort","a","b","Fragment","scores","removeItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddab3d16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NameInput\":\"NameInput_NameInput__2zw8A\",\"vanish\":\"NameInput_vanish__2QYm6\",\"appear\":\"NameInput_appear__eA6W2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LevelInput\":\"LevelInput_LevelInput__1mf7q\",\"vanish\":\"LevelInput_vanish__14bqd\",\"appear\":\"LevelInput_appear__3qMvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2mBMi\"};","import {} from '../../utils/localStorage';\n\nconst initialState = {\n  appState: 'nameInput',\n  fadeOutTimout: 700,\n  highScores: null,\n  score: 0,\n}\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_APP_STATE':\n      return {...state, appState: action.payload};\n    case 'SET_HIGHSCORES':\n      return {...state, highScores: action.payload};\n    case 'SET_SCORE':\n      return {...state, score: action.payload};\n    case 'RESET_APP':\n      return {...initialState};\n    default:\n      return state;\n  }\n}\n\nexport default appReducer;","const initialState = {\n  placeholder: `Minimum 3 Symbols`,\n  playerName: '',\n  vanished: false,\n}\n\nconst nameInputReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_NAME_INPUT_VANISHED':\n      return {...state, vanished: true};\n    case 'SET_PLAYER_NAME':\n      return {...state, playerName: action.payload};\n    case 'ON_FOCUS':\n      return {...state, placeholder: ''};\n    case 'ON_BLUR':\n      return {...state, placeholder: initialState.placeholder};\n    case 'RESET_NAME_INPUT':\n      return {...initialState};\n    default:\n      return state;\n  }\n}\n\nexport default nameInputReducer;","const initialState = {\n  gameLevel: '',\n  vanished: false,\n}\n\nconst levelSelectionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_LEVEL_SELECTION_VANISHED':\n      return {...state, vanished: true};\n    case 'CHANGE_GAME_LEVEL':\n      return {...state, gameLevel: action.payload};\n    case 'RESET_GAME_LEVEL':\n      return {...initialState};\n    default:\n      return state;\n  }\n}\n\nexport default levelSelectionReducer;","export const settings = {\n      // trainee: {\n      //   numberOfCards: 4,\n      //   rows: 2,\n      //   columns: 2\n      // },\n      junior: {\n        numberOfCards: 20,\n        rows: 4,\n        columns: 5\n      },\n      middle: {\n        numberOfCards: 24,\n        rows: 4,\n        columns: 6\n      },\n      senior: {\n        numberOfCards: 30,\n        rows: 5,\n        columns: 6\n      },\n      // guru: {\n      //   numberOfCards: 42,\n      //   rows: 6,\n      //   columns: 7\n      // }\n    }\n\n  export const makeRandomArrayOfCards = carsdsAmount => {\n    const result = [] \n    const arrayOfPairedNumbers = [...Array(carsdsAmount).keys()].map(i => i%(carsdsAmount/2) + 1)\n    for (let i = 0; i < carsdsAmount; i++) {\n      const index = Math.floor(Math.random() * carsdsAmount)\n      if (!result[index]) {\n        result[index] = arrayOfPairedNumbers[i]\n      } else {\n        i--\n      }\n    }\n    return result\n  }\n","import {makeRandomArrayOfCards} from '../../utils/settings';\n\n// const {numberOfCards, columns, rows} = settings[gameLevel];\nconst initialState = {\n  vanished: false,\n  cards: [],\n  openedCardsIndexes: [],\n  openedCardsNumber: 0,\n  steps: 0,\n  firstCardValue: null,\n  secondCardValue: null,\n  numberOfCards: null,\n  rows: null, \n  columns: null,\n  leftCards: null,\n  clickBlock: false,\n  timer: null,\n}\n\nconst gameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_GAME':\n      const {numberOfCards, rows, columns} = action.payload;\n      return {...state, numberOfCards, rows, columns, leftCards: numberOfCards};\n    case 'DEC_LEFT_CARDS':\n      return {...state, leftCards: state.leftCards - 2};\n    case 'SET_CARDS':\n      const cards = makeRandomArrayOfCards(state.numberOfCards).map((card, idx) => ({id: idx, value: card, isOpened: false}))\n      return {...state, cards};\n    case 'OPEN_CARD':\n      return {...state, cards: state.cards.map(card => card.id !== action.payload ? card : (card.isOpened = true, card))};\n    case 'CLOSE_CARDS':\n      return {...state, cards: state.cards.map(card => {\n        return (card.id === state.openedCardsIndexes[0] || card.id === state.openedCardsIndexes[1])\n        ? (card.isOpened = false, card)\n        : card\n      })};\n    case 'CLOSE_ALL_CARDS':\n      return {...state, cards: state.cards.map(card => (card.isOpened = false, card))};\n    case 'SET_FIRST_CARD':\n      return {...state, firstCardValue: action.payload};\n    case 'SET_SECOND_CARD':\n      return {...state, secondCardValue: action.payload};\n    case 'INC_STEP':\n      return {...state, steps: state.steps + 1};\n    case 'INC_OPENED_CARDS_NUMBER':\n      return {...state, openedCardsNumber: state.openedCardsNumber + 1};\n    case 'RESET_OPENED_CARDS_NUMBER':\n      return {...state, openedCardsNumber: null};\n    case 'SET_CLICK_BLOCK':\n      return {...state, clickBlock: action.payload};\n    case 'SET_TIMER':\n      return {...state, timer: action.payload};\n    case 'SAVE_OPENED_CARD_INDEX':\n      return {...state, openedCardsIndexes: [...state.openedCardsIndexes, action.payload]};\n    case 'RESET_STEP':\n      return {...state, steps: 0};\n    case 'RESET_OPENED_CARD_INDEX':\n      return {...state, openedCardsIndexes: []};\n    case 'SET_GAME_VANISHED':\n      return {...state, vanished: true};\n    case 'RESET_GAME':\n      return {...initialState};\n    default:\n      return state;\n  }\n}\n\nexport default gameReducer;","const initialState = {\n  vanished: false,\n}\n\nconst finishReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_FINISH_VANISHED':\n      return {...state, vanished: true};\n    case 'RESET_FINISH':\n      return {...initialState};\n    default:\n      return state;\n  }\n}\n\nexport default finishReducer;\n\n","import {createStore, combineReducers} from 'redux';\nimport appReducer from '../redux/reducers/appReducer';\nimport nameInputReducer from '../redux/reducers/nameInputReducer';\nimport levelSelectionReducer from '../redux/reducers/levelSelectionReducer';\nimport gameReducer from '../redux/reducers/gameReducer';\nimport finishReducer from '../redux/reducers/finishReducer';\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  nameInput: nameInputReducer,\n  levelSelection: levelSelectionReducer,\n  game: gameReducer,\n  finish: finishReducer\n})\n\nconst store = createStore(rootReducer, undefined, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n\nexport default store;","export const changeAppState = newState => ({\n  type: 'CHANGE_APP_STATE',\n  payload: newState\n})\nexport const setHighScores = highScores => ({\n  type: 'SET_HIGHSCORES',\n  payload: highScores\n})\nexport const resetApp = () => ({\n  type: 'RESET_APP'\n});\n\n","\nconst Input = props => {\n\n  return (\n      <label>\n        <input\n          type={props.type}\n          name={props.name}\n          value={props.value}\n          onChange={props.onChange}\n          ref={props.inputRef}\n          placeholder={props.placeholder}\n          onFocus={props.onFocus}\n          onBlur={props.onBlur}\n          autoComplete=\"off\"\n        />\n        <span>{props.LabelText}</span>\n      </label>    \n  )\n}\n\nexport default Input","import {useSelector, useDispatch} from 'react-redux';\nimport {setPlayerName, onBlur, onFocus, setNameInputVanished} from '../../redux/actions/nameInputActions'\nimport {changeAppState} from '../../redux/actions/appActions'\nimport classes from './NameInput.module.scss';\nimport Input from '../Input/Input';\n\nconst NameInput = () => {\n  const dispatch = useDispatch();\n  const {vanished, placeholder, playerName} = useSelector(({nameInput}) => nameInput);\n  const onClick = () => {\n    dispatch(setNameInputVanished())\n    setTimeout(() => dispatch(changeAppState('levelInput')), 700)\n  }\n  const onChange = e => {\n    e.preventDefault()\n    dispatch(setPlayerName(e.target.value.trim()))\n  }\n  const isButtonDisabled = playerName.length >= 3 ? false : true;\n  const cls = [classes.NameInput]\n  vanished && cls.push(classes.vanish)\n\n  return (\n    <div className={cls.join(' ')}>\n      <fieldset>\n        <legend>Identify Yourself</legend>\n        <Input\n        type=\"text\"\n        name=\"userName\"\n        placeholder={placeholder}\n        value={playerName}\n        onChange={onChange}\n        onFocus={() => dispatch(onFocus())}\n        onBlur={() => dispatch(onBlur())}/>\n      </fieldset>\n      <button onClick={onClick} disabled={isButtonDisabled}>\n        Next\n      </button>\n    </div>\n  )\n}\n\nexport default NameInput","export const setPlayerName = playerName => ({\n  type: 'SET_PLAYER_NAME',\n  payload: playerName\n});\nexport const setNameInputVanished = playerName => ({\n  type: 'SET_NAME_INPUT_VANISHED',\n});\nexport const onFocus = () => ({\n  type: 'ON_FOCUS',\n});\nexport const onBlur = () => ({\n  type: 'ON_BLUR',\n});\nexport const resetNameInput = () => ({\n  type: 'RESET_NAME_INPUT',\n});\n","export const setGame = settings => ({\n  type: 'SET_GAME',\n  payload: settings\n});\nexport const decLeftCards = () => ({\n  type: 'DEC_LEFT_CARDS',\n});\nexport const setCards = cards => ({\n  type: 'SET_CARDS',\n  payload: cards\n});\nexport const openCard = index => ({\n  type: 'OPEN_CARD',\n  payload: index\n});\nexport const closeCards = () => ({\n  type: 'CLOSE_CARDS',\n});\nexport const closeAllCards = () => ({\n  type: 'CLOSE_ALL_CARDS',\n});\nexport const setFirstCard = value => ({\n  type: 'SET_FIRST_CARD',\n  payload: value\n});\nexport const setSecondCard = value => ({\n  type: 'SET_SECOND_CARD',\n  payload: value\n});\nexport const incStep = () => ({\n  type: 'INC_STEP',\n});\nexport const incOpenedCardsNumber = () => ({\n  type: 'INC_OPENED_CARDS_NUMBER',\n});\nexport const saveOpenedCardIndex = index => ({\n  type: 'SAVE_OPENED_CARD_INDEX',\n  payload: index\n});\nexport const resetStep = () => ({\n  type: 'RESET_STEP',\n});\nexport const resetOpenedCardsNumber = () => ({\n  type: 'RESET_OPENED_CARDS_NUMBER',\n});\nexport const resetOpenedCardIndex = () => ({\n  type: 'RESET_OPENED_CARD_INDEX',\n});\nexport const setGameVanished = () => ({\n  type: 'SET_GAME_VANISHED',\n});\nexport const resetGame = () => ({\n  type: 'RESET_GAME',\n});\nexport const setClickBlock = value => ({\n  type: 'SET_CLICK_BLOCK',\n  payload: value\n});\nexport const setTimer = timer => ({\n  type: 'SET_TIMER',\n  payload: timer\n});\n\n","export const setFinishVanished = () => ({\n  type: 'SET_FINISH_VANISHED',\n});\nexport const resetFinish = () => ({\n  type: 'RESET_FINISH',\n});\n","import { changeAppState, setHighScores } from '../redux/actions/appActions';\nimport { resetFinish } from '../redux/actions/finishActions';\nimport { resetGame } from '../redux/actions/gameActions';\nimport { resetGameLevel } from '../redux/actions/levelSelectionActions';\nimport { resetNameInput } from '../redux/actions/nameInputActions';\nimport { getHighscoresFromLocalSorage } from './localStorage';\n\nexport const onChangeLevel = (setVanishedAction, dispatch) => {\n  dispatch(setVanishedAction())\n  setTimeout(() => {\n    dispatch(resetFinish());\n    dispatch(changeAppState('levelInput'));\n    dispatch(resetGame());\n    dispatch(resetGameLevel());\n  }, 700)\n}\nexport const onEndGame = (setVanishedAction, dispatch) => {\n  dispatch(setVanishedAction())\n  setTimeout(() => {\n    dispatch(changeAppState('nameInput'));\n    dispatch(resetFinish());\n    dispatch(resetGame());\n    dispatch(resetGameLevel());\n    dispatch(resetNameInput());\n  }, 700)\n}\nexport const setHighScoresState = (dispatch, gameLevel) => {\n  const highScores = getHighscoresFromLocalSorage(gameLevel);\n  highScores ? dispatch(setHighScores(highScores)) : dispatch(setHighScores({}));\n}","export const setLevelSelectionVanished = () => ({\n  type: 'SET_LEVEL_SELECTION_VANISHED',\n});\nexport const changeGameLevel = level => ({\n  type: 'CHANGE_GAME_LEVEL',\n  payload: level\n});\nexport const resetGameLevel = () => ({\n  type: 'RESET_GAME_LEVEL',\n});","  export const setHighscoresToLocalStorage = (level, highScores) => localStorage.setItem(level, JSON.stringify(highScores))\n  export const getHighscoresFromLocalSorage = level => JSON.parse(localStorage.getItem(level))\n  export const deleteHighscoresFromLocalSorage = level => localStorage.removeItem(level)\n","import {useSelector, useDispatch} from 'react-redux';\nimport {settings} from '../../utils/settings';\nimport {changeAppState} from '../../redux/actions/appActions';\nimport {changeGameLevel, setLevelSelectionVanished} from '../../redux/actions/levelSelectionActions';\nimport {setGame} from '../../redux/actions/gameActions';\nimport {setHighScoresState} from '../../utils/sharedMethods';\nimport classes from './LevelInput.module.scss';\nimport Input from '../Input/Input';\n\nconst LevelInput = () => {\n  const levels = Object.keys(settings)\n  const dispatch = useDispatch();\n  const {vanished, gameLevel} = useSelector(({levelSelection}) => levelSelection);\n  const onClick  = () => {\n    setHighScoresState(dispatch, gameLevel);\n    dispatch(setLevelSelectionVanished());\n    setTimeout(() => {\n      dispatch(setGame(settings[gameLevel]))\n      dispatch(changeAppState('gameStart'))\n    }, 700);\n  }\n  const onChange = e => {\n    dispatch(changeGameLevel(e.target.value))\n  }\n  const isButtonDisabled = !gameLevel;\n  const cls = [classes.LevelInput];\n\n  vanished && cls.push(classes.vanish);\n\n  return (\n    <div className={cls.join(' ')}>\n      <fieldset>\n        <legend>What's Your Level</legend>\n        {levels.map(level => (\n          <Input\n            key={level}\n            type={\"radio\"}\n            name={\"level\"}\n            value={level}\n            LabelText={level}\n            onChange={onChange}/>\n        ))}          \n      </fieldset>\n      <button\n      onClick={onClick}\n      disabled={isButtonDisabled}>\n        Start Game\n      </button>\n    </div>\n  )\n}\n\nexport default LevelInput","import {useSelector, useDispatch} from 'react-redux';\nimport {\n  openCard, \n  setFirstCard, \n  setSecondCard, \n  incOpenedCardsNumber, \n  setClickBlock, \n  saveOpenedCardIndex} from '../../redux/actions/gameActions';\nimport classes from './Card.module.scss';\n\nconst Card = ({isOpened, index, value}) => {\n  const dispatch = useDispatch();\n  const {clickBlock, openedCardsNumber} = useSelector(({game}) => game)\n  const cls = [classes.card]\n  const onClick = () => {\n    if (clickBlock || isOpened) return;\n    dispatch(setClickBlock(true));\n    dispatch(openCard(index));\n    dispatch(saveOpenedCardIndex(index));\n    dispatch(incOpenedCardsNumber());\n    openedCardsNumber ? dispatch(setSecondCard(value)) : dispatch(setFirstCard(value));\n  }\n  if (isOpened) cls.push(classes.active)\n\n  return (\n    <div\n      className={classes.container}\n      onClick={onClick}>\n      <div className={cls.join(' ')}>\n        <div className={classes.front} />\n        <div className={`${classes.back} ${classes[`back_${value}`]}`}/>\n      </div>\n    </div>\n  )\n}\n\n// export default memo(Card);\nexport default Card;","import {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {settings} from '../../utils/settings';\nimport {setHighscoresToLocalStorage} from '../../utils/localStorage';\nimport {changeAppState, setHighScores} from '../../redux/actions/appActions';\nimport {\n  setGame,\n  setCards, \n  setClickBlock, \n  setFirstCard, \n  setSecondCard,\n  setGameVanished,\n  incStep,\n  decLeftCards,\n  closeCards,\n  closeAllCards, \n  resetOpenedCardsNumber, \n  resetOpenedCardIndex, \n  resetGame,\n  setTimer} from '../../redux/actions/gameActions';\nimport classes from './Game.module.scss';\nimport Card from '../Card/Card';\nimport {onChangeLevel, onEndGame} from '../../utils/sharedMethods';\n\nconst Game = () => {\n  const dispatch = useDispatch();\n  const {highScores} = useSelector(({app}) => app);\n  const {playerName} = useSelector(({nameInput}) => nameInput);\n  const {gameLevel} = useSelector(({levelSelection}) => levelSelection);\n  const {\n    vanished, \n    steps, \n    cards, \n    leftCards, \n    openedCardsNumber, \n    firstCardValue, \n    secondCardValue,\n    clickBlock,\n    openedCardsIndexes, numberOfCards, columns, rows, timer} = useSelector(({game}) => game);\n  const style = {gridTemplateColumns: `repeat(${columns}, 1fr)`, gridTemplateRows: `repeat(${rows}, 1fr)`};\n  \n  const checkOpenedCards = equal => {\n    dispatch(incStep());\n    dispatch(setFirstCard(null));\n    dispatch(setSecondCard(null));\n    dispatch(resetOpenedCardsNumber());\n\n    setTimeout(() => {\n      equal && dispatch(decLeftCards());\n      !equal && dispatch(closeCards());\n      dispatch(resetOpenedCardIndex()); \n      dispatch(setClickBlock(false));\n    }, 700)\n  }\n \n  const onResetGame = () => {\n    const timer = setTimeout(() => {\n      dispatch(resetGame());\n      dispatch(setClickBlock(false));\n      dispatch(setTimer(null))\n    }, 700);\n    dispatch(setTimer(timer))\n    dispatch(setClickBlock(true));\n    dispatch(closeAllCards());\n  }\n\n  const finishGame = score => {\n    const highScores = {...score};\n    highScores[playerName] = highScores[playerName] && (highScores[playerName] < steps)\n    ? highScores[playerName]\n    : steps\n    dispatch(setHighScores(highScores));\n    setHighscoresToLocalStorage(gameLevel ,highScores)\n    dispatch(setGameVanished());\n    setTimeout(() => {\n      dispatch(changeAppState('gameFinished'))\n    }, 700)\n  }\n\n  const cls = [classes.Game]\n\n  useEffect(() => {\n    openedCardsIndexes.length === 2 && openedCardsNumber === 2 && !timer && checkOpenedCards(firstCardValue === secondCardValue);\n    openedCardsIndexes.length < 2 && clickBlock && dispatch(setClickBlock(false));\n    leftCards === 0 && !vanished && finishGame(highScores);\n  })\n\n  useEffect(() => {\n      dispatch(setGame(settings[gameLevel]))\n      dispatch(setCards())\n  }, [dispatch, numberOfCards, gameLevel])\n\n  if (vanished) cls.push(classes.vanish)\n  \n  return (\n    <div className={cls.join(' ')}>\n      <div className={classes.header}>\n        <div>\n          <div className={classes.player}>Player: <span>{playerName}</span></div>\n          <div className={classes.steps}>Steps: <span>{steps}</span></div>\n        </div>\n        <div className={classes.buttons}>\n          <button onClick={onResetGame}>Reset</button>\n          <button onClick={() => onChangeLevel(setGameVanished, dispatch)}>Change Level</button>\n          <button onClick={() => onEndGame(setGameVanished, dispatch)}>End Game</button>\n        </div>\n      </div>\n      <div className={classes.cards} style={style}>\n        {cards.map(({id, isOpened, value}, index) => (\n          <Card\n            key={id}\n            index={index}\n            value={value}\n            isOpened={isOpened}/>)\n          )}\n      </div>\n    </div>\n  )\n}\n\nexport default Game;","import React from 'react';\nimport {useDispatch ,useSelector} from 'react-redux';\nimport {deleteHighscoresFromLocalSorage} from '../../utils/localStorage';\nimport {changeAppState} from '../../redux/actions/appActions';\nimport { resetGame } from '../../redux/actions/gameActions';\nimport {setFinishVanished, resetFinish} from '../../redux/actions/finishActions';\nimport {onChangeLevel, onEndGame, setHighScoresState} from '../../utils/sharedMethods';\nimport classes from './Finish.module.scss';\n// import { resetGameLevel } from '../../redux/actions/levelSelectionActions';\n// import { resetNameInput } from '../../redux/actions/nameInputActions';\n\nconst Finish = (props) => {\n  const dispatch = useDispatch();\n  const {highScores} = useSelector(({app}) => app);\n  const {playerName} = useSelector(({nameInput}) => nameInput);\n  const {gameLevel} = useSelector(({levelSelection}) => levelSelection);\n  const {steps} = useSelector(({game}) => game);\n  const {vanished} = useSelector(({finish}) => finish);\n  const cls = [classes.Finish]\n  const arrayOfHighScores = Object.entries(highScores).sort((a, b) => a[1] - b[1])\n  const highScoresTable = arrayOfHighScores.map(score => (\n                <React.Fragment key={score[0]}>\n                  <div className={classes['scores__name']}>{score[0]}</div>\n                  <div className={classes['scores__score']}>{score[1]}</div>\n                </React.Fragment>\n              ))\n\n  const onDeleteScores = () => {\n    deleteHighscoresFromLocalSorage(gameLevel);\n    setHighScoresState(dispatch, gameLevel);\n  }\n  const onRetry = () => {\n    dispatch(setFinishVanished())\n    setTimeout(() => {\n      dispatch(changeAppState('gameStart'))\n      dispatch(resetFinish())\n      dispatch(resetGame());\n    }, 700)\n  }\n\n  if (vanished) {\n    cls.push(classes.vanish)\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <header>\n        <h1>Finish</h1>\n      </header>\n      <main>\n        <div className={classes['player-highscore']}>\n          <span className={classes['player-highscore__name']}>{playerName},</span> Your Score is <span className={classes['player-highscore__score']}>{steps}</span> steps on <span className={classes['player-highscore__level']}>{gameLevel}</span> level\n        </div>\n        <div className={classes['action-buttons']}>\n          <button onClick={onRetry}>Retry</button>\n          <button onClick={() => onChangeLevel(setFinishVanished, dispatch)}>Change Level</button>\n          <button onClick={() => onEndGame(setFinishVanished, dispatch)}>End Game</button>\n        </div>\n        <div>\n          <h2>{props.level} Level High Scores</h2>\n          <div className={classes.scores}>\n            {/* !highScoresHidden &&  */highScoresTable}\n          </div>\n        </div>\n      </main>\n      <footer>\n        <button onClick={onDeleteScores}>Delete Scores</button>\n      </footer>\n    </div>\n  )\n}\n\nexport default Finish;","import classes from './App.module.scss';\nimport {useSelector} from 'react-redux';\nimport NameInput from '../NameInput/NameInput';\nimport LevelInput from '../LevelInput/LevelInput';\nimport Game from '../Game/Game';\nimport Finish from '../Finish/Finish';\n\n\n\nconst App = () => {\n  const {appState} = useSelector(({app}) => app);\n  return (\n    <div className={classes.App}>\n      {appState === 'nameInput' && <NameInput/>}\n      {appState === 'levelInput' && <LevelInput/>}\n      {appState === 'gameStart' && <Game/>}\n      {appState === 'gameFinished' && <Finish/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './store/store'\nimport App from './components/App/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Finish\":\"Finish_Finish__zwfJC\",\"vanish\":\"Finish_vanish__cqQCJ\",\"appear\":\"Finish_appear__FIirp\",\"player-highscore\":\"Finish_player-highscore__23BzU\",\"player-highscore__score\":\"Finish_player-highscore__score__3TAfC\",\"player-highscore__name\":\"Finish_player-highscore__name__LZr0y\",\"player-highscore__level\":\"Finish_player-highscore__level__3AzaV\",\"action-buttons\":\"Finish_action-buttons__15R2B\",\"scores\":\"Finish_scores__HulzG\",\"scores__name\":\"Finish_scores__name__11YY-\",\"scores__score\":\"Finish_scores__score__K1USh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Game\":\"Game_Game__uljQe\",\"vanish\":\"Game_vanish__2k-Fr\",\"cards\":\"Game_cards__1u89R\",\"header\":\"Game_header__cOiWf\",\"appear\":\"Game_appear__2r_vm\",\"player\":\"Game_player__38-ar\",\"steps\":\"Game_steps__7da7y\",\"buttons\":\"Game_buttons__17h1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__2U80V\",\"card\":\"Card_card__35wN0\",\"front\":\"Card_front__7CH74\",\"back\":\"Card_back__1-JZn\",\"back_1\":\"Card_back_1__3zmQL\",\"back_2\":\"Card_back_2__iEG4s\",\"back_3\":\"Card_back_3__3o-Uf\",\"back_4\":\"Card_back_4__NqWN2\",\"back_5\":\"Card_back_5__3tqDe\",\"back_6\":\"Card_back_6__3b2-f\",\"back_7\":\"Card_back_7__36n44\",\"back_8\":\"Card_back_8__hJnzv\",\"back_9\":\"Card_back_9__16iGn\",\"back_10\":\"Card_back_10__1Ys1A\",\"back_11\":\"Card_back_11__2LjiW\",\"back_12\":\"Card_back_12__PvImY\",\"back_13\":\"Card_back_13__37iEI\",\"back_14\":\"Card_back_14__2N800\",\"back_15\":\"Card_back_15__1DLYk\",\"active\":\"Card_active__w5w5S\"};"],"sourceRoot":""}