{"version":3,"sources":["components/Game/Game.module.scss","components/Card/Card.module.scss","components/NameInput/NameInput.module.scss","components/LevelInput/LevelInput.module.scss","App.module.scss","components/Menu/Menu.js","components/Input/Input.js","components/NameInput/NameInput.js","components/LevelInput/LevelInput.js","components/Card/Card.js","components/Game/Game.js","components/Finish/Finish.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Menu","props","Input","type","name","value","onChange","ref","inputRef","placeholder","onFocus","onBlur","LabelText","NameInput","useState","vanish","setVanish","buttonDisabled","setButtonDisabled","cls","classes","push","className","join","nameInputPlaceHolder","nameInputValue","e","preventDefault","nameInputFocusHandler","nameInputBlurHandler","onClick","disabled","LevelInput","elemRef","createRef","levels","map","level","levelChangeHandler","startButtonHandler","startButtonState","Card","reset","opened","setOpened","card","useEffect","active","container","data-value","front","back","Game","numberOfCards","columns","rows","cardCLickHandler","bind","style","gridTemplateColumns","gridTemplateRows","cards","makeRandomArrayOfCards","state","openedCardsHooks","openedCardsNumber","steps","firstCardValue","secondCardValue","cardReset","leftCards","resetGame","setState","saveScore","localStorage","getItem","Array","isArray","JSON","parse","setItem","stringify","highScore","player","playerName","score","console","log","carsdsAmount","set1","Set","set2","result","i","length","fillSetAndArray","set","size","array","num","Math","floor","random","has","add","hook","this","concat","setTimeout","forEach","finishGameHandler","header","buttons","endGameHandler","index","Component","Finish","App","minimumUserNameLength","settings","easy","normal","hard","game","gameLevel","startButtonDisabled","levelSelectHandler","target","setGame","nameInputHandler","trim","nameButtonHandler","current","classList","Object","keys","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c438f00c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Game\":\"Game_Game__uljQe\",\"appear\":\"Game_appear__2r_vm\",\"vanish\":\"Game_vanish__2k-Fr\",\"cards\":\"Game_cards__1u89R\",\"header\":\"Game_header__cOiWf\",\"player\":\"Game_player__38-ar\",\"steps\":\"Game_steps__7da7y\",\"buttons\":\"Game_buttons__17h1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__2U80V\",\"card\":\"Card_card__35wN0\",\"front\":\"Card_front__7CH74\",\"back\":\"Card_back__1-JZn\",\"active\":\"Card_active__w5w5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NameInput\":\"NameInput_NameInput__2zw8A\",\"appear\":\"NameInput_appear__eA6W2\",\"vanish\":\"NameInput_vanish__2QYm6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LevelInput\":\"LevelInput_LevelInput__1mf7q\",\"appear\":\"LevelInput_appear__3qMvQ\",\"vanish\":\"LevelInput_vanish__14bqd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"vanish\":\"App_vanish__2Yvk7\"};","// import classes from './Menu.module.scss';\n\nconst Menu = props => {\n  return (\n  <>\n    \n  </>)\n}\n\nexport default Menu;","// import classes from './Input.module.scss'\n\nconst Input = props => {\n\n  return (\n      <label>\n        <input\n          type={props.type}\n          name={props.name}\n          value={props.value}\n          onChange={props.onChange}\n          ref={props.inputRef}\n          placeholder={props.placeholder}\n          onFocus={props.onFocus}\n          onBlur={props.onBlur}\n        />\n        <span>{props.LabelText}</span>\n      </label>    \n  )\n}\n\nexport default Input","import {useState} from 'react'\nimport classes from './NameInput.module.scss';\nimport Input from '../Input/Input';\n\nconst NameInput = props => {\n  const [vanish, setVanish] = useState(false)\n  const [buttonDisabled, setButtonDisabled] = useState(true)\n  const buttonClickHandler = () => props.onClick(setVanish)\n  const inputChangeHandler = e => {\n    e.preventDefault()\n    props.onChange(e, setButtonDisabled)\n  }\n  const cls = [classes.NameInput]\n  vanish && cls.push(classes.vanish)\n\n  return (\n    <div className={cls.join(' ')}>\n      <fieldset>\n        <legend>Enter Your Name</legend>\n        <Input\n        type=\"text\"\n        name=\"userName\"\n        placeholder={props.nameInputPlaceHolder}\n        value={props.nameInputValue}\n        onChange={inputChangeHandler}\n        onFocus={props.nameInputFocusHandler}\n        onBlur={props.nameInputBlurHandler}\n      />\n      </fieldset>\n      <button onClick={buttonClickHandler} disabled={buttonDisabled}>\n        Next\n      </button>\n    </div>\n  )\n}\n\nexport default NameInput","import {createRef} from 'react'\nimport classes from './LevelInput.module.scss'\nimport Input from '../Input/Input'\n\nconst LevelInput = props => {\n  const elemRef = createRef();\n  const onClick  = () => props.startButtonHandler(elemRef, classes.vanish)\n\n  return (\n    <div className={classes.LevelInput} ref={elemRef}>\n      <fieldset>\n        <legend>Choose Your Destiny</legend>\n        {props.levels.map(level => (\n          <Input\n            key={level}\n            type={\"radio\"}\n            name={\"level\"}\n            value={level}\n            LabelText={level}\n            onChange={props.levelChangeHandler}\n          />\n        ))}          \n      </fieldset>\n      <button\n      onClick={onClick}\n      disabled={props.startButtonState}\n      >\n        Start Game\n      </button>\n    </div>\n  )\n}\n\nexport default LevelInput","import {useState, useEffect} from 'react';\nimport classes from './Card.module.scss';\n\nconst Card = props => {\n  let reset = props.reset\n  const [opened, setOpened] = useState(false)\n  const cls = [classes.card]\n  const onClick = () => {\n    props.onClick(setOpened, props.card, opened)\n  }\n\n  useEffect(() => {\n    opened && setOpened(false)\n  }, [reset])\n\n  if (opened) cls.push(classes.active)\n\n  return (\n    <div\n      className={classes.container}\n      onClick={onClick}>\n      <div className={cls.join(' ')} data-value={props.card}>\n        <div className={classes.front}></div>\n        <div className={classes.back}>{props.card}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card","import {Component} from 'react'\nimport classes from './Game.module.scss';\nimport Card from '../Card/Card';\n\n\nclass Game extends Component {\n\n  numberOfCards = this.props.numberOfCards;\n  columns = this.props.columns;\n  rows = this.props.rows;\n  cardCLickHandler = this.cardCLickHandler.bind(this)\n  style = {gridTemplateColumns: `repeat(${this.columns}, 1fr)`, gridTemplateRows: `repeat(${this.rows}, 1fr)`};\n  cards = this.makeRandomArrayOfCards(this.numberOfCards)\n  state = {\n    vanish: false,\n    openedCardsHooks: [],\n    openedCardsNumber: 0,\n    steps: 0,\n    firstCardValue: null,\n    secondCardValue: null,\n    cardReset: false,\n    leftCards: this.numberOfCards\n  }\n\n  makeRandomArrayOfCards(carsdsAmount) {\n    const set1 = new Set()\n    const set2 = new Set()\n    const result = []\n\n    for (let i = 0; result.length < carsdsAmount; i++){\n      fillSetAndArray(set1, carsdsAmount/2, result)\n      fillSetAndArray(set2, carsdsAmount/2, result)\n    }\n\n    return result\n\n    function fillSetAndArray(set, size, array) {\n      let num = Math.floor(Math.random() * (size) + 1);\n      if (!set.has(num)) {\n        set.add(num);\n        array.push(num);\n      }\n    }\n  }\n\n  cardCLickHandler(hook, value, state){\n    if (this.state.openedCardsHooks.length < 2 && !state) {\n      this.state.firstCardValue ? this.setState({secondCardValue: value}) : this.setState({firstCardValue: value})\n      hook(true)\n      this.setState({\n        openedCardsHooks: this.state.openedCardsHooks.concat(hook),\n        openedCardsNumber: this.state.openedCardsNumber + 1\n      })\n    } \n  }\n\n  componentDidUpdate() {\n    if (this.state.openedCardsNumber === 2) {\n      setTimeout(() => {\n        if (this.state.firstCardValue !== this.state.secondCardValue) {\n          this.state.openedCardsHooks.forEach(hook => hook(false))\n        } else {\n          this.setState({leftCards: this.state.leftCards - 2})\n        }\n        this.setState({\n          steps: this.state.steps + 1,\n          openedCardsHooks: [],\n          secondCardValue: null,\n          firstCardValue: null\n        }, () => {\n          if (!this.state.leftCards) {\n            this.saveScore()\n            this.setState({vanish: true})\n            setTimeout(() =>  this.props.finishGameHandler(this.state.steps), 700)\n          }\n        })\n      }, 1000)\n      this.setState({openedCardsNumber: 0})     \n    }\n  }\n\n\n  resetGame = () => {\n    this.setState({\n      cardReset: !this.state.cardReset,\n      openedCardsHooks: [],\n      openedCardsNumber: 0,\n      steps: 0,\n      firstCardValue: null,\n      secondCardValue: null,\n      leftCards: this.numberOfCards\n    },\n      () => {this.cards = this.makeRandomArrayOfCards(this.numberOfCards)})\n  }\n\n  saveScore = () => {\n    if (!localStorage.getItem('highScore') || Array.isArray(JSON.parse(localStorage.getItem('highScore')))) localStorage.setItem('highScore', JSON.stringify({}))\n    const highScore = JSON.parse(localStorage.getItem('highScore'))\n    const player = this.props.playerName\n    const score = this.state.steps\n    console.log(highScore, player, score);\n    highScore[player] = highScore[player] && (highScore[player] < score) ? highScore[player] : score\n    console.log();\n    localStorage.setItem('highScore', JSON.stringify(highScore))\n\n    console.log(JSON.parse(localStorage.getItem('highScore')));\n  }\n\n  render() {\n    const cls = [classes.Game]\n    if (this.state.vanish) cls.push(classes.vanish)\n\n    return (\n      <div className={cls.join(' ')}>\n        <div className={classes.header}>\n          <div>\n            <div className={classes.player}>Player: <span>{this.props.playerName}</span></div>\n            <div className={classes.steps}>Steps: <span>{this.state.steps}</span></div>\n          </div>\n          <div className={classes.buttons}>\n            <button onClick={this.resetGame}>Reset</button>\n            <button onClick={this.props.levelChangeHandler}>Change Level</button>\n            <button onClick={this.props.endGameHandler}>End Game</button>\n          </div>\n          \n        </div>\n        <div className={classes.cards} style={this.style}>\n          {this.cards.map((card, index) => (\n              <Card\n                key={index}\n                card={card}\n                onClick={this.cardCLickHandler}\n                reset={this.state.cardReset}\n              />)\n            )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Game;","import classes from './Finish.module.scss'\n\nconst Finish = props => {\n  return (\n    <div className={classes.Finish}>\n      <h1>Finish</h1>\n      <div>Your Score is {props.score} steps</div>\n      <div>High Scores:</div>\n      <button>Delete Scores</button>\n    </div>\n  )\n}\n\nexport default Finish;","import {Component} from 'react';\nimport classes from './App.module.scss';\nimport Menu from './components/Menu/Menu'\nimport NameInput from './components/NameInput/NameInput';\nimport LevelInput from './components/LevelInput/LevelInput';\nimport Game from './components/Game/Game';\nimport Finish from './components/Finish/Finish';\n\nclass App extends Component {\n  minimumUserNameLength = 3;\n  nameInputPlaceHolder = `Minimum ${this.minimumUserNameLength} Symbols`\n  settings = {\n      // easy: {\n      //   numberOfCards: 20,\n      //   rows: 4,\n      //   columns: 5\n      // },\n      easy: {\n        numberOfCards: 4,\n        rows: 2,\n        columns: 2\n      },\n      normal: {\n        numberOfCards: 24,\n        rows: 4,\n        columns: 6\n      },\n      hard: {\n        numberOfCards: 30,\n        rows: 5,\n        columns: 6\n      }\n    }\n  state = {\n    game: 'nameInput',\n    playerName: '',\n    gameLevel: '',\n    startButtonDisabled: true,\n  }\n\n  levelSelectHandler = e => {\n    this.setState({\n      gameLevel: e.target.value,\n      startButtonDisabled: false,\n    })\n  }\n\n  levelChangeHandler = () => {\n    this.setState({\n      game: 'levelInput',\n      gameLevel: '',\n      startButtonDisabled: true,\n    })\n  }\n\n  endGameHandler = () => {\n    this.setState({\n      game: 'nameInput',\n      playerName: '',\n      gameLevel: '',\n      startButtonDisabled: true,\n    })\n  }\n\n  setGame = level => {\n    return {...this.settings[level],\n      playerName: this.state.playerName,\n      levelChangeHandler: this.levelChangeHandler,\n      endGameHandler: this.endGameHandler,\n      finishGameHandler: this.finishGameHandler\n    }\n  }\n\n  nameInputHandler = (e, hook) => {\n    this.setState({playerName: e.target.value.trim()},\n      () => this.state.playerName.length >= this.minimumUserNameLength ? hook(false) : hook(true))\n  }\n\n  nameInputFocusHandler = e => {\n    e.target.placeholder = ''\n  }\n\n  nameInputBlurHandler = e => {\n    e.target.placeholder = this.nameInputPlaceHolder\n  }\n \n  nameButtonHandler = hook => {\n    hook(true)\n    setTimeout(() => this.setState({game: 'levelInput'}), 700)\n  }\n \n  startButtonHandler = (ref, className) => {\n    ref.current.classList.add(className)\n    setTimeout(() => this.setState({game: 'gameStart'}), 700)\n  }\n\n  finishGameHandler = score => {\n    this.setState({\n      game: 'gameFinished',\n      score\n    })\n  }\n\n  render() {\n    return (\n      <div className={classes.App}>\n        <Menu />\n        {this.state.game === 'nameInput' && <NameInput\n          onClick={this.nameButtonHandler}\n          onChange={this.nameInputHandler}\n          nameInputValue={this.state.playerName}\n          nameInputPlaceHolder={this.nameInputPlaceHolder}\n          minimumUserNameLength={this.minimumUserNameLength}\n          nameInputFocusHandler={this.nameInputFocusHandler}\n          nameInputBlurHandler={this.nameInputBlurHandler}\n        />}\n        {this.state.game === 'levelInput' && <LevelInput\n          levelChangeHandler={this.levelSelectHandler}\n          startButtonState={this.state.startButtonDisabled}\n          startButtonHandler={this.startButtonHandler}\n          levels={Object.keys(this.settings)}\n        />}\n        {this.state.game === 'gameStart' && <Game {...this.setGame(this.state.gameLevel)}/>}\n        {this.state.game === 'gameFinished' && <Finish score={this.state.score}/>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}