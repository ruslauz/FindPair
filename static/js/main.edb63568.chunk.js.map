{"version":3,"sources":["components/Finish/Finish.module.scss","components/Game/Game.module.scss","components/Card/Card.module.scss","components/NameInput/NameInput.module.scss","components/LevelInput/LevelInput.module.scss","App.module.scss","components/Input/Input.js","components/NameInput/NameInput.js","components/LevelInput/LevelInput.js","components/Card/Card.js","components/Game/Game.js","components/Finish/Finish.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Input","props","type","name","value","onChange","ref","inputRef","placeholder","onFocus","onBlur","LabelText","NameInput","useState","vanish","setVanish","buttonDisabled","setButtonDisabled","cls","classes","push","className","join","nameInputPlaceHolder","nameInputValue","e","preventDefault","nameInputFocusHandler","nameInputBlurHandler","onClick","disabled","LevelInput","elemRef","createRef","levels","map","level","levelChangeHandler","startButtonHandler","startButtonState","Card","reset","opened","setOpened","card","useEffect","active","container","data-value","front","back","Game","numberOfCards","columns","rows","style","gridTemplateColumns","gridTemplateRows","clickBlock","state","cards","makeRandomArrayOfCards","openedCardsHooks","openedCardsNumber","steps","firstCardValue","secondCardValue","cardReset","leftCards","cardCLickHandler","isOpened","length","setState","concat","resetGame","clearTimeout","timeout","setTimeout","carsdsAmount","set1","Set","set2","result","i","fillSetAndArray","set","size","array","num","Math","floor","random","has","add","this","setHighScoresState","forEach","hook","finishGameHandler","header","player","playerName","buttons","endGameHandler","index","Component","Finish","highScoresHidden","setHighScoresHidden","highScores","arrayOfHighScores","score","Fragment","retry","scores","deleteHighscoresFromLocalSorage","App","fadeOutTimout","minimumUserNameLength","settings","easy","normal","hard","game","gameLevel","startButtonDisabled","nameInputHandler","target","trim","nameButtonHandler","levelSelectHandler","current","classList","setGame","saveScoreHandler","getHighscoresFromLocalSorage","retryGameHandler","Object","entries","sort","a","b","setHighscoresToLocalStorage","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","keys","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edb63568.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Finish\":\"Finish_Finish__zwfJC\",\"appear\":\"Finish_appear__FIirp\",\"vanish\":\"Finish_vanish__cqQCJ\",\"player-highscore\":\"Finish_player-highscore__23BzU\",\"player-highscore__score\":\"Finish_player-highscore__score__3TAfC\",\"player-highscore__name\":\"Finish_player-highscore__name__LZr0y\",\"player-highscore__level\":\"Finish_player-highscore__level__3AzaV\",\"action-buttons\":\"Finish_action-buttons__15R2B\",\"scores\":\"Finish_scores__HulzG\",\"scores__name\":\"Finish_scores__name__11YY-\",\"scores__score\":\"Finish_scores__score__K1USh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Game\":\"Game_Game__uljQe\",\"appear\":\"Game_appear__2r_vm\",\"vanish\":\"Game_vanish__2k-Fr\",\"cards\":\"Game_cards__1u89R\",\"header\":\"Game_header__cOiWf\",\"player\":\"Game_player__38-ar\",\"steps\":\"Game_steps__7da7y\",\"buttons\":\"Game_buttons__17h1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__2U80V\",\"card\":\"Card_card__35wN0\",\"front\":\"Card_front__7CH74\",\"back\":\"Card_back__1-JZn\",\"active\":\"Card_active__w5w5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NameInput\":\"NameInput_NameInput__2zw8A\",\"appear\":\"NameInput_appear__eA6W2\",\"vanish\":\"NameInput_vanish__2QYm6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LevelInput\":\"LevelInput_LevelInput__1mf7q\",\"appear\":\"LevelInput_appear__3qMvQ\",\"vanish\":\"LevelInput_vanish__14bqd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"vanish\":\"App_vanish__2Yvk7\"};","\nconst Input = props => {\n\n  return (\n      <label>\n        <input\n          type={props.type}\n          name={props.name}\n          value={props.value}\n          onChange={props.onChange}\n          ref={props.inputRef}\n          placeholder={props.placeholder}\n          onFocus={props.onFocus}\n          onBlur={props.onBlur}\n        />\n        <span>{props.LabelText}</span>\n      </label>    \n  )\n}\n\nexport default Input","import {useState} from 'react'\nimport classes from './NameInput.module.scss';\nimport Input from '../Input/Input';\n\nconst NameInput = props => {\n  const [vanish, setVanish] = useState(false)\n  const [buttonDisabled, setButtonDisabled] = useState(true)\n  const buttonClickHandler = () => props.onClick(setVanish)\n  const inputChangeHandler = e => {\n    e.preventDefault()\n    props.onChange(e, setButtonDisabled)\n  }\n  const cls = [classes.NameInput]\n  vanish && cls.push(classes.vanish)\n\n  return (\n    <div className={cls.join(' ')}>\n      <fieldset>\n        <legend>Enter Your Name</legend>\n        <Input\n        type=\"text\"\n        name=\"userName\"\n        placeholder={props.nameInputPlaceHolder}\n        value={props.nameInputValue}\n        onChange={inputChangeHandler}\n        onFocus={props.nameInputFocusHandler}\n        onBlur={props.nameInputBlurHandler}\n      />\n      </fieldset>\n      <button onClick={buttonClickHandler} disabled={buttonDisabled}>\n        Next\n      </button>\n    </div>\n  )\n}\n\nexport default NameInput","import {createRef} from 'react'\nimport classes from './LevelInput.module.scss'\nimport Input from '../Input/Input'\n\nconst LevelInput = props => {\n  const elemRef = createRef();\n  const onClick  = () => props.startButtonHandler(elemRef, classes.vanish)\n\n  return (\n    <div className={classes.LevelInput} ref={elemRef}>\n      <fieldset>\n        <legend>Choose Your Destiny</legend>\n        {props.levels.map(level => (\n          <Input\n            key={level}\n            type={\"radio\"}\n            name={\"level\"}\n            value={level}\n            LabelText={level}\n            onChange={props.levelChangeHandler}\n          />\n        ))}          \n      </fieldset>\n      <button\n      onClick={onClick}\n      disabled={props.startButtonState}\n      >\n        Start Game\n      </button>\n    </div>\n  )\n}\n\nexport default LevelInput","import {useState, useEffect} from 'react';\nimport classes from './Card.module.scss';\n\nconst Card = props => {\n  let reset = props.reset\n  const [opened, setOpened] = useState(false)\n  const cls = [classes.card]\n  const onClick = () => {\n    props.onClick(setOpened, props.card, opened)\n  }\n\n  useEffect(() => {\n    setOpened(false)\n  }, [reset])\n\n  if (opened) cls.push(classes.active)\n\n  return (\n    <div\n      className={classes.container}\n      onClick={onClick}>\n      <div className={cls.join(' ')} data-value={props.card}>\n        <div className={classes.front}></div>\n        <div className={classes.back}>{props.card}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card","import {Component} from 'react'\nimport classes from './Game.module.scss';\nimport Card from '../Card/Card';\n\nclass Game extends Component {\n  numberOfCards = this.props.numberOfCards\n  columns = this.props.columns\n  rows = this.props.rows\n  style = {gridTemplateColumns: `repeat(${this.columns}, 1fr)`, gridTemplateRows: `repeat(${this.rows}, 1fr)`}\n  clickBlock = false\n  state = {\n    cards: this.makeRandomArrayOfCards(this.numberOfCards),\n    vanish: false,\n    openedCardsHooks: [],\n    openedCardsNumber: 0,\n    steps: 0,\n    firstCardValue: null,\n    secondCardValue: null,\n    cardReset: false,\n    leftCards: this.numberOfCards\n  }\n\n  makeRandomArrayOfCards(carsdsAmount) {\n    const set1 = new Set()\n    const set2 = new Set()\n    const result = []\n\n    for (let i = 0; result.length < carsdsAmount; i++){\n      fillSetAndArray(set1, carsdsAmount/2, result)\n      fillSetAndArray(set2, carsdsAmount/2, result)\n    }\n\n    return result\n\n    function fillSetAndArray(set, size, array) {\n      const num = Math.floor(Math.random() * (size) + 1);\n      if (!set.has(num)) {\n        set.add(num);\n        array.push(num);\n      }\n    }\n  }\n\n  cardCLickHandler = (setOpened, value, isOpened) => {\n    if (this.state.openedCardsHooks.length < 2 && !isOpened && !this.clickBlock) {\n      setOpened(!isOpened)\n      this.state.firstCardValue ? this.setState({secondCardValue: value}) : this.setState({firstCardValue: value})\n      this.setState({\n        openedCardsHooks: this.state.openedCardsHooks.concat(setOpened),\n        openedCardsNumber: this.state.openedCardsNumber + 1\n      })\n    } \n  }\n\n  resetGame = () => {\n    this.clickBlock = true\n    clearTimeout(this.timeout) /* This Timeout Fixes Bug With Reset Button During Opened Card Checking */\n    this.setState({\n      cardReset: !this.state.cardReset,\n      openedCardsHooks: [],\n      openedCardsNumber: 0,\n      steps: 0,\n      firstCardValue: null,\n      secondCardValue: null,\n      leftCards: this.numberOfCards,\n    })\n    setTimeout(() =>  {\n      this.setState({cards: this.makeRandomArrayOfCards(this.numberOfCards)})\n      this.clickBlock = false\n    }, 500)\n  }\n\n  componentDidMount() {\n    this.props.setHighScoresState()\n  }\n\n  componentDidUpdate() {\n    if (this.state.openedCardsNumber === 2) {\n      this.timeout = setTimeout(() => {\n        if (this.state.firstCardValue !== this.state.secondCardValue) {\n          this.state.openedCardsHooks.forEach(hook => hook(false))\n        } else {\n          this.setState({leftCards: this.state.leftCards - 2})\n        }\n        this.setState({\n          steps: this.state.steps + 1,\n          openedCardsHooks: [],\n          secondCardValue: null,\n          firstCardValue: null\n        }, () => {\n          if (!this.state.leftCards) {\n            this.setState({vanish: true})\n            setTimeout(() =>  this.props.finishGameHandler(this.state.steps), 700)\n          }\n        })\n      }, 1000)\n      this.setState({openedCardsNumber: 0})     \n    }\n  }\n\n  render() {\n    const cls = [classes.Game]\n    if (this.state.vanish) cls.push(classes.vanish)\n\n    return (\n      <div className={cls.join(' ')}>\n        <div className={classes.header}>\n          <div>\n            <div className={classes.player}>Player: <span>{this.props.playerName}</span></div>\n            <div className={classes.steps}>Steps: <span>{this.state.steps}</span></div>\n          </div>\n          <div className={classes.buttons}>\n            <button onClick={this.resetGame}>Reset</button>\n            <button onClick={this.props.levelChangeHandler}>Change Level</button>\n            <button onClick={this.props.endGameHandler}>End Game</button>\n          </div>\n        </div>\n        <div className={classes.cards} style={this.style}>\n          {this.state.cards.map((card, index) => (\n              <Card\n                key={index}\n                card={card}\n                onClick={this.cardCLickHandler}\n                reset={this.state.cardReset}\n              />)\n            )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Game;","import classes from './Finish.module.scss'\nimport React, {useState} from 'react'\n\nconst Finish = props => {\n  const [highScoresHidden, setHighScoresHidden] = useState(false)\n  const highScores = props.arrayOfHighScores.map(score => (\n                <React.Fragment key={score[0]}>\n                  <div className={classes['scores__name']}>{score[0]}</div>\n                  <div className={classes['scores__score']}>{score[1]}</div>\n                </React.Fragment>\n              ))\n  const deleteScoresHandler = () => {\n    props.deleteHighscoresFromLocalSorage()\n    setHighScoresHidden(true)\n  }\n  const retryGameHandler = highScoresHidden => props.retry(highScoresHidden)\n  \n  return (\n    <div className={classes.Finish}>\n      <header>\n        <h1>Finish</h1>\n      </header>\n      <main>\n        <div className={classes['player-highscore']}>\n          <span className={classes['player-highscore__name']}>{props.playerName},</span> Your Score is <span className={classes['player-highscore__score']}>{props.score}</span> steps on <span className={classes['player-highscore__level']}>{props.level}</span> level\n        </div>\n        <div className={classes['action-buttons']}>\n          <button onClick={retryGameHandler}>Retry</button>\n          <button onClick={props.levelChangeHandler}>Change Level</button>\n          <button onClick={props.endGameHandler}>End Game</button>\n        </div>\n        <div>\n          <h2>{props.level} Level High Scores</h2>\n          <div className={classes.scores}>\n            {!highScoresHidden && highScores}\n          </div>\n        </div>\n      </main>\n      <footer>\n        <button onClick={deleteScoresHandler}>Delete Scores</button>\n      </footer>\n    </div>\n  )\n}\n\nexport default Finish;","import {Component} from 'react';\nimport classes from './App.module.scss';\nimport NameInput from './components/NameInput/NameInput';\nimport LevelInput from './components/LevelInput/LevelInput';\nimport Game from './components/Game/Game';\nimport Finish from './components/Finish/Finish';\n\nclass App extends Component {\n  fadeOutTimout = 700\n  minimumUserNameLength = 3\n  nameInputPlaceHolder = `Minimum ${this.minimumUserNameLength} Symbols`\n  settings = {\n      easy: {\n        numberOfCards: 20,\n        rows: 4,\n        columns: 5\n      },\n      normal: {\n        numberOfCards: 24,\n        rows: 4,\n        columns: 6\n      },\n      hard: {\n        numberOfCards: 30,\n        rows: 5,\n        columns: 6\n      }\n    }\n  state = {\n    game: 'nameInput',\n    playerName: '',\n    gameLevel: '',\n    startButtonDisabled: true,\n    highScores: {}\n  }\n\n /* Handlers For Name Input Component */\n\n  nameInputHandler = (e, hook) => {\n    this.setState({playerName: e.target.value.trim()},\n      () => this.state.playerName.length >= this.minimumUserNameLength ? hook(false) : hook(true))\n  }\n\n  nameInputFocusHandler = e => {\n    e.target.placeholder = ''\n  }\n\n  nameInputBlurHandler = e => {\n    e.target.placeholder = this.nameInputPlaceHolder\n  }\n \n  nameButtonHandler = hook => {\n    hook(true)\n    setTimeout(() => this.setState({game: 'levelInput'}), this.fadeOutTimout)\n  }\n\n/* Handlers For Level Input Component */\n\n  levelSelectHandler = e => {\n    this.setState({\n      gameLevel: e.target.value,\n      startButtonDisabled: false,\n    })\n  }\n\n  startButtonHandler = (ref, className) => {\n    ref.current.classList.add(className)\n    setTimeout(() => this.setState({game: 'gameStart'}), this.fadeOutTimout)\n  }\n\n/* Methods and Handlers For Game Component */\n\n  setGame = level => {\n    return {...this.settings[level],\n      playerName: this.state.playerName,\n      levelChangeHandler: this.levelChangeHandler,\n      endGameHandler: this.endGameHandler,\n      finishGameHandler: this.finishGameHandler,\n      setHighScoresState: this.setHighScoresState,\n    }\n  }\n\n  levelChangeHandler = () => {\n    this.setState({\n      game: 'levelInput',\n      gameLevel: '',\n      startButtonDisabled: true,\n      score: 0,\n    })\n  }\n\n  endGameHandler = () => {\n    this.setState({\n      game: 'nameInput',\n      playerName: '',\n      gameLevel: '',\n      startButtonDisabled: true,\n    })\n  }\n\n  finishGameHandler = score => this.setState({score}, this.saveScoreHandler)\n\n  setHighScoresState = () => {\n    const highScores = this.getHighscoresFromLocalSorage()\n    highScores ? this.setState({highScores}) :  this.setState({highScores: {}})\n  }\n\n/* Methods And Handlers For Finish Component */\n\n  retryGameHandler = highScoresHidden => {\n    highScoresHidden \n    ? this.setState({game: 'gameStart', highScores: {}})\n    : this.setState({game: 'gameStart'})\n  } \n\n  saveScoreHandler = () => {\n    const highScores = this.state.highScores\n    highScores[this.state.playerName] = highScores[this.state.playerName] && (highScores[this.state.playerName] < this.state.score)\n    ? highScores[this.state.playerName]\n    : this.state.score\n    const arrayOfHighScores = Object.entries(highScores).sort((a, b) => a[1] - b[1])\n    this.setState({highScores, arrayOfHighScores, game: 'gameFinished'}, this.setHighscoresToLocalStorage)\n  }\n\n/* Methods For Local Storage */\n\n  setHighscoresToLocalStorage = () => localStorage.setItem(this.state.gameLevel, JSON.stringify(this.state.highScores))\n\n  getHighscoresFromLocalSorage = () => JSON.parse(localStorage.getItem(this.state.gameLevel))\n\n  deleteHighscoresFromLocalSorage = () => localStorage.removeItem(this.state.gameLevel)\n\n  render() {\n    return (\n      <div className={classes.App}>\n        {this.state.game === 'nameInput' && <NameInput\n          onClick={this.nameButtonHandler}\n          onChange={this.nameInputHandler}\n          nameInputValue={this.state.playerName}\n          nameInputPlaceHolder={this.nameInputPlaceHolder}\n          minimumUserNameLength={this.minimumUserNameLength}\n          nameInputFocusHandler={this.nameInputFocusHandler}\n          nameInputBlurHandler={this.nameInputBlurHandler}\n        />}\n        {this.state.game === 'levelInput' && <LevelInput\n          levelChangeHandler={this.levelSelectHandler}\n          startButtonState={this.state.startButtonDisabled}\n          startButtonHandler={this.startButtonHandler}\n          levels={Object.keys(this.settings)}\n        />}\n        {this.state.game === 'gameStart' && <Game {...this.setGame(this.state.gameLevel)}/>}\n        {this.state.game === 'gameFinished' && <Finish\n          score={this.state.score}\n          arrayOfHighScores={this.state.arrayOfHighScores}\n          playerName={this.state.playerName}\n          level={this.state.gameLevel}\n          retry={this.retryGameHandler}\n          levelChangeHandler={this.levelChangeHandler}\n          endGameHandler={this.endGameHandler}\n          deleteHighscoresFromLocalSorage={this.deleteHighscoresFromLocalSorage}\n        />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}